[["index.html", "RNAseq analysis pipeline Chapter 1 Prerequisites", " RNAseq analysis pipeline Zhengnong Zhu 2023-12-20 Chapter 1 Prerequisites Linux and conda to install software. R 4.1.2 or later release Download link. Rstudio Desktop Download link. "],["pipeline.html", "Chapter 2 Pipeline 2.1 software install 2.2 from fastq files to alignments 2.3 differential expression analysis", " Chapter 2 Pipeline 2.1 software install There are some required software that you can install with conda conda create -n salmon salmon conda activate salmon conda install trimmomatic conda install multiqc 2.2 from fastq files to alignments 2.2.1 Quality control of FASTQ files make directory cd workspace mkdir datasets go to workspace/, fastq files is in datasets/, the test data can be found at /share/work/HPC/work_tmp/PipelineJob_141934_20230925/data mkdir fastqc for filename in datasets/*.fastq.gz do fastqc -o fastqc $filename done multiqc fastqc/* go to fastqc, open multiqc_report.html in browser, check whether the data is normal 2.2.2 Trimming make directory mkdir trim cd trim mkdir qc cd ../../ make filenames list, each row represent a sample, the test data can be found at /share/work/HPC/work_tmp/PipelineJob_141934_20230925/data/raw_filenames.txt head filenames.txt sample01 sample02 sample03 trimming cat filenames.txt | parallel -j 6 --results logs/trimmomatic/ --joblog logs/trimmomatic.log \\ trimmomatic PE -threads 4 \\ -phred33 \\ -trimlog trim/qc/{}.log \\ datasets/{}_1.fastq.gz datasets/{}_2.fastq.gz \\ trim/qc/{}_1_paired.fastq trim/qc/{}_1_unpaired.fastq \\ trim/qc/{}_2_paired.fastq trim/qc/{}_2_unpaired.fastq \\ ILLUMINACLIP:$MINICONDA/envs/salmon/share/trimmomatic/adapters/TruSeq3-PE-2.fa:2:30:10:2:TRUE \\ LEADING:20 TRAILING:20 \\ SLIDINGWINDOW:4:15 \\ MINLEN:36 &amp; 2.2.3 salmon make directory mkdri output mkdir references if there is no index of salmon, you need build index with salmon, the test data can be found at /share/projects/Analytics/IO/caiyi/iop229-rnaseqnewtargettumor/data/references/MmvM33_samlon_ind salmon index -t references.fa.gz -i references/ref_salmon_ind Quantifying the samples nohup cat filenames.txt | parallel --resume-failed --tmpdir trim/salmon/tmpdir -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \\ salmon quant -i references/ref_salmon_ind -l IU \\ -1 trim/qc/{}_1_paired.fastq \\ -2 trim/qc/{}_2_paired.fastq \\ -p 8 \\ --validateMappings \\ --recoverOrphans \\ --allowDovetail \\ --useVBOpt \\ --seqBias \\ -o output/salmon/{}_quant &amp; The test salmon data can be found at /share/work/HPC/work_tmp/PipelineJob_141934_20230925/trim/salmon/*_quant 2.3 differential expression analysis make directory cd output mkdir DA The differential expression analysis were performed in R. once in R, set your working directory setwd('~/workspace/output/DA') The metadata of samples contain group information library(tidyverse) library(here) library(tximport) library(GenomicFeatures) library(DESeq2) library(RColorBrewer) library(gplots) library(clusterProfiler) # need latest version 3.14.3 library(enrichplot) options(stringsAsFactors = FALSE) # ref.annotation.gtf can be found at /share/projects/Analytics/IO/caiyi/iop229-rnaseqnewtargettumor/data/references/gencode.vM33.primary_assembly.annotation.gtf txdb &lt;- makeTxDbFromGFF(&#39;~/workspace/references/ref.annotation.gtf&#39;) k &lt;- keys(txdb, keytype = &quot;TXNAME&quot;) tx2gene &lt;- select(txdb, keys = k, keytype = &quot;TXNAME&quot;, columns = &quot;GENEID&quot;) head(tx2gene) samples &lt;- read.table(&#39;~/workspace/filenames.txt&#39;, header = FALSE) files &lt;- file.path(&#39;~/workspace/output/salmon&#39;, paste0(samples$V1, &quot;_quant&quot;), &quot;quant.sf&quot;) names(files) &lt;- paste0(samples$V1) txi.salmon &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene) head(txi.salmon$counts) metadata &lt;- data.frame( SeqID=samples$V1, Group=c( rep(&#39;M43_PD1&#39;,3), rep(&#39;M15_PD1&#39;,3), rep(&#39;PD1&#39;,3), rep(&#39;CTRL&#39;,3), rep(&#39;R_PD1&#39;,3) ), SampleID=c( &#39;M010-T1 1_1&#39;, &#39;M010-T1 1_4&#39;, &#39;M010-T1 1_6&#39;, &#39;M010-T1 1_8&#39;, &#39;M010-T1 1_10&#39;, &#39;M010-T2 2_1&#39;, &#39;M010-T2 2_9&#39;, &#39;M010-T8 8_1&#39;, &#39;M010-T8 8_4&#39;, &#39;M010-T8 8_10&#39;, &#39;M010-T8 8_2&#39;, &#39;M010-T8 8_7&#39;, &#39;M010-T2 2_7&#39;, &#39;M010-T2 2_5&#39;, &#39;M010-T2 2_2&#39; ) ) dds &lt;- DESeqDataSetFromTximport(txi.salmon, metadata, ~Group) dds &lt;- DESeq(dds) # Then, we create a sample distance heatmap and plot a PCA: rld &lt;- rlogTransformation(dds) head(assay(rld)) z &lt;- DESeq2::plotPCA(rld, intgroup=&quot;Group&quot;) zz &lt;- DESeq2::plotPCA(rld, returnData = TRUE, intgroup=&quot;Group&quot;) zz &lt;- merge(zz, metadata, by.x=&quot;name&quot;, by.y=&#39;SeqID&#39;) z + ggrepel::geom_label_repel(data = zz, aes(x=PC1, y=PC2, label=SampleID)) (mycols &lt;- brewer.pal(8, &quot;Dark2&quot;)[1:length(unique(metadata$Group))]) sampleDists &lt;- as.matrix(dist(t(assay(rld)))) heatmap.2(as.matrix(sampleDists), key=F, trace=&quot;none&quot;, col=colorpanel(100, &quot;black&quot;, &quot;white&quot;), ColSideColors=mycols[metadata$Group], RowSideColors=mycols[metadata$Group], margin=c(10, 10), main=&quot;Sample Distance Matrix&quot;) # Volcano plot, CTRL vs PD1 res &lt;- results(dds, contrast = c(&quot;Group&quot;, &quot;CTRL&quot;, &quot;PD1&quot;)) summary(res) table(res$padj&lt;0.05) res &lt;- res[order(res$padj), ] resdata &lt;- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)), by=&quot;row.names&quot;, sort=FALSE) names(resdata)[1] &lt;- &quot;Gene&quot; head(resdata) resdata &lt;- resdata %&gt;% mutate(stableGeneID=str_split_fixed(Gene, &#39;\\\\.&#39;, 2)[,1]) with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=&quot;Volcano plot&quot;, xlim=c(-2.5,2))) with(subset(res, padj&lt;.05 ), points(log2FoldChange, -log10(pvalue), pch=20, col=&quot;red&quot;)) # GO organism &lt;- &#39;org.Mm.eg.db&#39; original_gene_list &lt;- resdata$log2FoldChange names(original_gene_list) &lt;- resdata$Gene gene_list &lt;- na.omit(original_gene_list) gene_list &lt;- sort(gene_list, decreasing = TRUE) gse &lt;- gseGO(geneList=gene_list, ont =&quot;ALL&quot;, keyType = &quot;ENSEMBL&quot;, nPerm = 10000, minGSSize = 3, maxGSSize = 800, pvalueCutoff = 0.05, verbose = TRUE, OrgDb = organism, pAdjustMethod = &quot;none&quot;) require(DOSE) dotplot(gse, showCategory=10, split=&quot;.sign&quot;) + facet_grid(.~.sign) gseaplot(gse, by = &quot;all&quot;, title = gse$Description[1], geneSetID = 1) # KEGG pathway ids &lt;- bitr(names(original_gene_list), fromType = &quot;ENSEMBL&quot;, toType = &quot;ENTREZID&quot;, OrgDb=organism) dedup_ids &lt;- ids[!duplicated(ids[c(&quot;ENSEMBL&quot;)]),] resdata2 &lt;- resdata[resdata$Gene %in% dedup_ids$ENSEMBL,] resdata2$Y &lt;- dedup_ids$ENTREZID kegg_gene_list &lt;- resdata2$log2FoldChange names(kegg_gene_list) &lt;- resdata2$Y kegg_gene_list &lt;- na.omit(kegg_gene_list) kegg_gene_list &lt;- sort(kegg_gene_list, decreasing = TRUE) library(R.utils) R.utils::setOption(&#39;clusterProfiler.download.method&#39;, &#39;wget&#39;) getOption(&#39;clusterProfiler.download.method&#39;) kegg_organism &lt;- &quot;mmu&quot; kk2 &lt;- gseKEGG(geneList = kegg_gene_list, organism = kegg_organism, nPerm = 10000, minGSSize = 3, maxGSSize = 800, pvalueCutoff = 0.05, pAdjustMethod = &quot;none&quot;, keyType = &quot;ncbi-geneid&quot;) dotplot(kk2, showCategory = 10, title = &quot;Enriched Pathways&quot; , split=&quot;.sign&quot;) + facet_grid(.~.sign) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
